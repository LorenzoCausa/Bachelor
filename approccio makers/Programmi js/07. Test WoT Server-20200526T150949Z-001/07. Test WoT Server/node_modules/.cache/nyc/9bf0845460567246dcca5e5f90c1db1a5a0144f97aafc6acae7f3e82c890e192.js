var cov_2msaqmfdcr=function(){var path="/Users/riccardo.berta/Drive/Corsi/MEA - Makers a new approach to Electronic Applications/Lecture Notes/08. Unit Testing/code/07. Test WoT Server/middleware/converter.js";var hash="eb2a1d8f5fc33287812ee7ea4fd346e965a051c0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/riccardo.berta/Drive/Corsi/MEA - Makers a new approach to Electronic Applications/Lecture Notes/08. Unit Testing/code/07. Test WoT Server/middleware/converter.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:37}},"1":{start:{line:3,column:18},end:{line:3,column:43}},"2":{start:{line:4,column:15},end:{line:4,column:29}},"3":{start:{line:7,column:0},end:{line:44,column:2}},"4":{start:{line:8,column:2},end:{line:43,column:3}},"5":{start:{line:9,column:4},end:{line:9,column:64}},"6":{start:{line:13,column:4},end:{line:42,column:5}},"7":{start:{line:16,column:6},end:{line:22,column:7}},"8":{start:{line:17,column:8},end:{line:17,column:54}},"9":{start:{line:19,column:24},end:{line:19,column:68}},"10":{start:{line:20,column:8},end:{line:20,column:61}},"11":{start:{line:21,column:8},end:{line:21,column:15}},"12":{start:{line:25,column:6},end:{line:31,column:7}},"13":{start:{line:26,column:8},end:{line:26,column:61}},"14":{start:{line:28,column:8},end:{line:28,column:42}},"15":{start:{line:29,column:8},end:{line:29,column:37}},"16":{start:{line:30,column:8},end:{line:30,column:15}},"17":{start:{line:34,column:6},end:{line:34,column:57}},"18":{start:{line:35,column:6},end:{line:35,column:27}},"19":{start:{line:36,column:6},end:{line:36,column:13}},"20":{start:{line:41,column:6},end:{line:41,column:13}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:17},end:{line:7,column:18}},loc:{start:{line:7,column:28},end:{line:44,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:8,column:9},end:{line:8,column:10}},loc:{start:{line:8,column:35},end:{line:43,column:3}},line:8}},branchMap:{"0":{loc:{start:{line:13,column:4},end:{line:42,column:5}},type:"if",locations:[{start:{line:13,column:4},end:{line:42,column:5}},{start:{line:13,column:4},end:{line:42,column:5}}],line:13},"1":{loc:{start:{line:16,column:6},end:{line:22,column:7}},type:"if",locations:[{start:{line:16,column:6},end:{line:22,column:7}},{start:{line:16,column:6},end:{line:22,column:7}}],line:16},"2":{loc:{start:{line:25,column:6},end:{line:31,column:7}},type:"if",locations:[{start:{line:25,column:6},end:{line:31,column:7}},{start:{line:25,column:6},end:{line:31,column:7}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"eb2a1d8f5fc33287812ee7ea4fd346e965a051c0"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();// Require the two modules and instantiate a MessagePack encoder
const msgpack=(cov_2msaqmfdcr.s[0]++,require('msgpack5')());const json2html=(cov_2msaqmfdcr.s[1]++,require('node-json2html'));const encode=(cov_2msaqmfdcr.s[2]++,msgpack.encode);// In Express, a middleware is usually a function returning a function
cov_2msaqmfdcr.s[3]++;module.exports=function(){cov_2msaqmfdcr.f[0]++;cov_2msaqmfdcr.s[4]++;return function(req,res,next){cov_2msaqmfdcr.f[1]++;cov_2msaqmfdcr.s[5]++;console.info('Representation converter middleware called!');// Check if the previous middleware left a result
// in req.result
cov_2msaqmfdcr.s[6]++;if(req.result){cov_2msaqmfdcr.b[0][0]++;cov_2msaqmfdcr.s[7]++;// Read the request header and check if the client requested HTML
if(req.accepts('html')){cov_2msaqmfdcr.b[1][0]++;cov_2msaqmfdcr.s[8]++;console.info('HTML representation selected!');// If HTML was requested, use json2html to transform the JSON into simple HTML
var transform=(cov_2msaqmfdcr.s[9]++,{'tag':'div','html':'${name} : ${value}'});cov_2msaqmfdcr.s[10]++;res.send(json2html.transform(req.result,transform));cov_2msaqmfdcr.s[11]++;return;}else{cov_2msaqmfdcr.b[1][1]++;}// Read the request header and check if the client requested MessagePack
cov_2msaqmfdcr.s[12]++;if(req.accepts('application/x-msgpack')){cov_2msaqmfdcr.b[2][0]++;cov_2msaqmfdcr.s[13]++;console.info('MessagePack representation selected!');// Encode the JSON into MessagePack using the encoder
cov_2msaqmfdcr.s[14]++;res.type('application/x-msgpack');cov_2msaqmfdcr.s[15]++;res.send(encode(req.result));cov_2msaqmfdcr.s[16]++;return;}else{cov_2msaqmfdcr.b[2][1]++;}// For all other formats, default to JSON
cov_2msaqmfdcr.s[17]++;console.info('Defaulting to JSON representation!');cov_2msaqmfdcr.s[18]++;res.send(req.result);cov_2msaqmfdcr.s[19]++;return;}else{cov_2msaqmfdcr.b[0][1]++;cov_2msaqmfdcr.s[20]++;// If no result was present in req.result thereâ€™s not much you can do, so call the next middleware
next();}};};